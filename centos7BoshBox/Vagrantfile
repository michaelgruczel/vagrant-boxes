# -*- mode: ruby -*-
# vi: set ft=ruby :


$script = <<SCRIPT
    echo "################################################"
    echo "# You should now have everything to            #"
    echo "# install a director vm, just login by         #"
    echo "# vagrant ssh (on real operation systems)      #"
    echo "# with putty localhost vagrant/vagrant (win)   #"
    echo "################################################"    
SCRIPT


Vagrant.configure("2") do |config|
  # https://docs.vagrantup.com.
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "centos/7"
  #config.vm.name = "centos7_Bosh_cli"
  config.vm.synced_folder ".", "/vagrant", disabled: true

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL


  config.vm.provision "shell", inline: <<-SHELL
    sudo yum -y update
    sudo mkdir ~/Downloads/
    cd ~/Downloads/
    sudo yum install -y wget
    sudo wget https://s3.amazonaws.com/bosh-init-artifacts/bosh-init-0.0.101-linux-amd64
    sudo chmod +x ~/Downloads/bosh-init-*
    sudo mv ~/Downloads/bosh-init-* /usr/local/bin/bosh-init
    sudo yum install -y gcc gcc-c++ ruby ruby-devel mysql-devel postgresql-devel postgresql-libs sqlite-devel libxslt-devel libxml2-devel openssl
    echo "yajl-ruby and patch skipped"
    ruby -v
  SHELL

  config.vm.provision "shell", inline: $script

end
